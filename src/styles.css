/* Custom Theming for Angular Material */
/* For more information: https://material.angular.io/guide/theming */
@use '@angular/material' as mat;

/* Include the common styles for Angular Material. We include this here so that you only */
/* have to load a single css file for Angular Material in your app. */
/* Be sure that you only ever include this mixin once! */
@include mat.core();

/* Define the palettes for your theme using the Material Design palettes available in palette.scss */
/* (imported above). For each palette, you can optionally specify a default, lighter, and darker */
/* hue. Available color palettes: https://material.io/design/color/ */
$myFlix-Angular-client-primary: mat.define-palette(mat.$indigo-palette);
$myFlix-Angular-client-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

/* The warn palette is optional (defaults to red). */
$myFlix-Angular-client-warn: mat.define-palette(mat.$red-palette);

/* Create the theme object. A theme consists of configurations for individual */
/* theming systems such as "color" or "typography". */
$myFlix-Angular-client-theme: mat.define-light-theme((
  color: (
    primary: $myFlix-Angular-client-primary,
    accent: $myFlix-Angular-client-accent,
    warn: $myFlix-Angular-client-warn,
  )
));

/* Include theme styles for core and each component used in your app. */
/* Alternatively, you can import and @include the theme mixins for each component */
/* that you are using. */
@include mat.all-component-themes($myFlix-Angular-client-theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
